<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"
      integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS"
      crossorigin="anonymous"
    />
    <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"
      integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"
      integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k"
      crossorigin="anonymous"
    ></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
    <script type="text/javascript">
      $(document).ready(function() {
        var socket = io();

        socket.on("greeting", function(data) {
          console.log(data.msg);
          socket.emit("thankyou", {
            msg: "Thank you for connecting me! -Client"
          });
        });
      });
    </script>
    <style>
      * {
        outline: pink 1px solid;
      }
      .monster1 {
        margin-left: 12em;
        /* display: block; */
        width: 320px;
        height: 320px;
      }

      .box {
        width: 350px;
        height: 500px;
        display: inline-block;
        vertical-align: top;
        margin: 3rem;
      }

      .box1 {
        margin-left: 10em;
        border: 1px black solid;
        display: inline-block;
        margin-right: 0em;
      }

      .box2 {
        margin-right: 25em;
        display: inline-block;
        width: 400px;
      }

      body {
        text-align: center;
        /* margin-right: 100%; */
      }

      .attack {
        display: inline-block;
        margin: 0;
      }

      .bgpixel {
        background: url(https://media.giphy.com/media/4fsaueq5lCV4A/giphy.gif);
        background-repeat: no-repeat;
        height: 596px;
        width: 600px;
        float: left;
        background-size: cover;
      }

      .trash {
        color: red;
      }

      .hero1 {
        /* display: block; */
        width: 550px;
        height: 120px;
        margin-right: 20%;
      }
    </style>
    <title>Main Page</title>
  </head>
  <body>
    <div class="container">
      <h1>The unbeatable monster!!!</h1>
      <input id="id" name="id" type="hidden" value="<%= data[0].id %>" />

      <h3><%= data[0].username%>'s Current Playtime: <time>00:00:00</time></h3>
      <a class="btn btn-info" href="/users/<%= data[0].id%>">Account Details</a>
      <a class="btn btn-info" href="/logout">Logout</a>
      <h5>Unlock more attacks by doing more damage</h5>
      <h5>Go to account details that unlock new attack!</h5>
      <h3>Monster Says:</h3>
      <h3 class="trash">Let's Begin</h3>

      <div class="bgpixel">
        <div class="box box2">
          <!-- src="https://media.giphy.com/media/CEqMShyj3Oyly/giphy.gif" -->
          <img class="monster1" src="/images/wraith.gif" alt="monster" />
          <img class="hero1" src="/images/lightHero.gif" alt="hero" />
          <button class="btn btn-success weakPunch" href="#">
            Static Strike
          </button>

          <div class="attack" id="punchNormal">
            <% if(data[0].damage >= 5 ) {%>
            <button class="btn btn-primary normalPunch" value="5" href="#">
              Electric Shock
            </button>
            <button class="btn btn-primary normal" href="#">
              5 second cooldown
            </button>
            <% } %>
          </div>
          <div class="attack" id="punchSerious">
            <% if(data[0].damage >= 10 ) {%>
            <button class="btn btn-warning seriousPunch" value="10" href="#">
              Thundering Charge
            </button>
            <button class="btn btn-warning serious" href="#">
              10 second cooldown
            </button>
            <% } %>
          </div>

          <div class="attack" id="punchReallySerious">
            <% if(data[0].damage >= 15 ) {%>
            <button
              class="btn btn-danger reallySeriousPunch"
              value="15"
              href="#"
            >
              Plasma Impact
            </button>
            <button class="btn btn-danger reallySerious" href="#">
              20 second cooldown
            </button>
            <% } %>
          </div>
        </div>
      </div>
      <div class="box box1">
        <h3>Unbeatable Monster Rankings</h3>

        <ol id="ranker">
          <% for(x in all ){%>
          <li><%= all[x].username %>: <%= all[x].damage %> damage</li>
          <% } %>
        </ol>
      </div>
    </div>
    <script type="text/javascript">
      var socket = io();

      $(".normal").hide();
      $(".serious").hide();
      $(".reallySerious").hide();

      $(".weakPunch").click(function() {
        var attack = 1;
        var id = $("#id").val();
        socket.emit("weak_punch", { name: id, damage: parseInt(attack) });
        socket.emit("update_ranking");
        socket.emit("update_buttons");
        console.log(` name: ${id}, damage: ${attack} `);
      });

      $(".normalPunch").click(function() {
        var attack = 5;
        var id = $("#id").val();
        socket.emit("normal_punch", { name: id, damage: parseInt(attack) });
        socket.emit("update_ranking");
        socket.emit("update_buttons");
        $(".normalPunch").hide();
        function hide() {
          $(".normalPunch").hide();
          $(".normal").show();
        }
        hide();
        setTimeout(show, 5000);
        function show() {
          $(".normalPunch").show();
          $(".normal").hide();
        }
        console.log(` name: ${id}, damage: ${attack} `);
      });

      $(".seriousPunch").click(function() {
        var attack = 10;
        var id = $("#id").val();
        socket.emit("serious_punch", { name: id, damage: parseInt(attack) });
        socket.emit("update_ranking");
        socket.emit("update_buttons");
        $(".seriousPunch").hide();
        function hide() {
          $(".seriousPunch").hide();
          $(".serious").show();
        }
        hide();
        setTimeout(show, 10000);
        function show() {
          $(".seriousPunch").show();
          $(".serious").hide();
        }
        console.log(` name: ${id}, damage: ${attack} `);
      });

      $(".reallySeriousPunch").click(function() {
        var attack = 15;
        var id = $("#id").val();
        socket.emit("really_serious_punch", {
          name: id,
          damage: parseInt(attack)
        });
        socket.emit("update_ranking");
        socket.emit("update_buttons");
        $(".reallySeriousPunch").hide();
        function hide() {
          $(".reallySeriousPunch").hide();
          $(".reallySerious").show();
        }
        hide();
        setTimeout(show, 10000);
        function show() {
          $(".reallySeriousPunch").show();
          $(".reallySerious").hide();
        }
        console.log(` name: ${id}, damage: ${attack} `);
      });

      socket.on("sent", function(data) {
        // console.log(data.ranking);
        $("#ranker").html(``);
        for (p in data.ranking) {
          $("#ranker").append(
            `<li>${data.ranking[p].username}:  ${
              data.ranking[p].damage
            } damage</li>`
          );
        }
      });

      socket.on("button_update", function(data) {
        if (data.damage >= 5 && $(".normalPunch").val() == 5) {
          console.log("normal unlocked");
        } else if (data.damage >= 5) {
          $("#punchNormal").html(`
        <button class="btn btn-primary normalPunch" href="#">
          Go to account details!!!
        </button>`);
        }

        if (data.damage >= 10 && $(".seriousPunch").val() == 10) {
          console.log("serious unlocked");
        } else if (data.damage >= 10) {
          $("#punchSerious")
            .html(`<button class="btn btn-warning seriousPunch" href="#">
              Go to account details!!!
      </button>`);
        }

        if (data.damage >= 15 && $(".reallySeriousPunch").val() == 15) {
          console.log("very serious unlocked");
        } else if (data.damage >= 15) {
          $("#punchReallySerious")
            .html(`<button class="btn btn-danger reallySeriousPunch" href="#">
              Go to account details!!!
        </button>`);
        }
      });

      var x = document.getElementsByTagName("time")[0],
        seconds = 0,
        minutes = 0,
        hours = 0,
        t;

      function add() {
        seconds++;
        if (seconds >= 60) {
          seconds = 0;
          minutes++;
          if (minutes >= 60) {
            minutes = 0;
            hours++;
          }
        }

        x.textContent =
          (hours ? (hours > 9 ? hours : "0" + hours) : "00") +
          ":" +
          (minutes ? (minutes > 9 ? minutes : "0" + minutes) : "00") +
          ":" +
          (seconds > 9 ? seconds : "0" + seconds);

        timer();
      }
      function timer() {
        t = setTimeout(add, 1000);
      }
      timer();
      var trashTalk = [
        "This is getting boring",
        "You can't see me",
        "stop it! that tickles!",
        "are you even trying?",
        "Sooo, when are we gonna start this fight?",
        "My granny hits harder than you",
        "*yawn*",
        "ZZZzzz"
      ];

      function randomNumber() {
        var indexNum = Math.floor(Math.random() * trashTalk.length);
        return indexNum;
      }
      function talkTrash() {
        $(".trash").html(` ${trashTalk[randomNumber()]}`);
        timerTrash();
      }
      // if (parseInt(seconds) % 5 == 0) {
      //   randomNumber();
      //   talkTrash();
      // }
      function timerTrash() {
        q = setTimeout(talkTrash, 1000);
      }
      timerTrash();
    </script>
  </body>
</html>
